{"version":3,"sources":["components/molecules/CountDownTimer.tsx","components/molecules/CorrectAnswerCounter.tsx","components/atoms/GuideMessage.tsx","components/organisms/GameGuide.tsx","constants/game.ts","components/atoms/AnswerButton.tsx","components/atoms/AnswerGuide.tsx","components/molecules/AnswerBlock.tsx","components/organisms/SelectAnswerBlock.tsx","components/atoms/DifficultyButton.tsx","components/organisms/SelectDifficultyModal.tsx","components/atoms/SecondaryButton.tsx","components/organisms/CompleteModal.tsx","components/pages/Game.tsx","hooks/useTimer.ts","hooks/useQuiz.ts","containers/pages/Game.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["countDownTimer","countDowntime","Box","m","fontSize","Timer","style","paddingRight","CorrectAnswerCounter","correctAnswerCount","PanoramaFishEye","GuideMessage","isAnswerDisplay","isLastAnswerCorrect","Typography","GameGuide","display","CountDownTimer","BUTTON_COLORS","orange","red","green","indigo","EASY","EN_WORD","JP_WORD","FORMULA_PARTS_COUNT","NORMAL","HARD","AnswerButton","index","formula","isCorrect","onClickAction","Button","variant","width","color","backgroundColor","onClick","AnswerGuide","calcResult","abs","align","AnswerBlock","handleAnswer","height","SelectAnswerBlock","formulaData","map","data","p","DifficultyButton","difficultyInfo","SelectDifficultyModal","open","handleSelectDifficulty","Modal","closeAfterTransition","justifyContent","alignItems","Fade","in","bgcolor","boxShadow","flexDirection","id","PrimaryButton","text","CompleteModal","diffculty","handleRestart","TwitterShareButton","url","title","hashtags","TwitterIcon","size","borderRadius","SecondaryButton","Game","countDownTime","diffcultyInfo","difficultyModalOpen","completeModalOpen","Container","maxWidth","my","useTimer","limit","useState","setCountDownTime","intervalId","useRef","countDown","useCallback","time","startTimer","current","setInterval","stopTimer","clearInterval","resetTimer","useQuiz","setDiffcultyInfo","setFormulaData","answerCount","setAnswerCount","setCorrectAnswerCount","setIsAnswerDisplay","setIsLastAnswerCorrect","getRandomInt","min","max","Math","floor","random","createPartsOfFormula","operator","num","createFormulaDatum","addPartsCount","String","count","parts","console","log","isDuplicationAbs","formulaList","absList","Array","from","Set","length","getSettingCorrectFormulaData","reduce","prev","f","initialFormulaData","push","checkAnswer","useEffect","selectDiffculty","resetAnswerCount","setTimeout","EnhancedGame","updateDifficultyModalOpen","updateCompleteModalOpen","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","document","getElementById"],"mappings":"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","file":"static/js/main.553898aa.chunk.js","sourcesContent":["import { VFC } from 'react';\nimport Box from '@material-ui/core/Box';\nimport { Timer as TimerIcon } from '@material-ui/icons';\n\ntype Props = {\n  countDowntime: number;\n};\n\nconst countDownTimer: VFC<Props> = ({ countDowntime }) => (\n  <Box m={2} fontSize=\"1.8rem\">\n    <TimerIcon style={{ paddingRight: '5px' }} />\n    <>{countDowntime}</>\n  </Box>\n);\n\nexport default countDownTimer;\n","import { VFC } from 'react';\nimport Box from '@material-ui/core/Box';\nimport { PanoramaFishEye as PanoramaFishEyeIcon } from '@material-ui/icons';\n\ntype Props = {\n  correctAnswerCount: number;\n};\n\nconst CorrectAnswerCounter: VFC<Props> = ({ correctAnswerCount }) => (\n  <Box m={2} fontSize=\"1.8rem\">\n    <PanoramaFishEyeIcon />\n    <>{`：${correctAnswerCount}`}</>\n  </Box>\n);\n\nexport default CorrectAnswerCounter;\n","import { VFC } from 'react';\nimport Typography from '@material-ui/core/Typography';\n\ntype Props = {\n  isAnswerDisplay: boolean;\n  isLastAnswerCorrect: boolean;\n};\n\nconst GuideMessage: VFC<Props> = ({ isAnswerDisplay, isLastAnswerCorrect }) => (\n  <Typography>\n    {isAnswerDisplay && isLastAnswerCorrect && '正解！'}\n    {isAnswerDisplay && !isLastAnswerCorrect && '不正解...'}\n    {!isAnswerDisplay && '一番「2」に近い式はどれかな？'}\n  </Typography>\n);\n\nexport default GuideMessage;\n","import { VFC } from 'react';\nimport Box from '@material-ui/core/Box';\nimport CountDownTimer from 'components/molecules/CountDownTimer';\nimport CorrectAnswerCounter from 'components/molecules/CorrectAnswerCounter';\nimport GuideMessage from 'components/atoms/GuideMessage';\n\ntype Props = {\n  countDowntime: number;\n  correctAnswerCount: number;\n  isAnswerDisplay: boolean;\n  isLastAnswerCorrect: boolean;\n};\n\nconst GameGuide: VFC<Props> = ({\n  countDowntime,\n  correctAnswerCount,\n  isAnswerDisplay,\n  isLastAnswerCorrect,\n}) => (\n  <>\n    <Box display=\"flex\">\n      <CountDownTimer countDowntime={countDowntime} />\n      <CorrectAnswerCounter correctAnswerCount={correctAnswerCount} />\n    </Box>\n    <GuideMessage\n      isAnswerDisplay={isAnswerDisplay}\n      isLastAnswerCorrect={isLastAnswerCorrect}\n    />\n  </>\n);\n\nexport default GameGuide;\n","import green from '@material-ui/core/colors/green';\nimport indigo from '@material-ui/core/colors/indigo';\nimport orange from '@material-ui/core/colors/orange';\nimport red from '@material-ui/core/colors/red';\nimport { DiffcultyInfo } from '../models/Diffculty';\n\nexport const TIMER_LIMIT = 30;\nexport const BUTTON_COUNT = 4;\nexport const BUTTON_WIDTH = 250;\n\nexport const BUTTON_COLORS = [orange[800], red[500], green[600], indigo[500]];\n\nexport const EASY: DiffcultyInfo = {\n  EN_WORD: 'easy',\n  JP_WORD: '初級',\n  FORMULA_PARTS_COUNT: 2,\n};\n\nexport const NORMAL: DiffcultyInfo = {\n  EN_WORD: 'normal',\n  JP_WORD: '中級',\n  FORMULA_PARTS_COUNT: 3,\n};\n\nexport const HARD: DiffcultyInfo = {\n  EN_WORD: 'hard',\n  JP_WORD: '上級',\n  FORMULA_PARTS_COUNT: 5,\n};\n","import { VFC } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { BUTTON_WIDTH, BUTTON_COLORS } from 'constants/game';\n\ntype Props = {\n  index: number;\n  formula: string;\n  isCorrect: boolean;\n  onClickAction: (isCorrect: boolean) => void;\n};\n\nconst AnswerButton: VFC<Props> = ({\n  index,\n  formula,\n  isCorrect,\n  onClickAction,\n}) => (\n  <Button\n    variant=\"contained\"\n    style={{\n      width: `${BUTTON_WIDTH}px`,\n      color: 'white',\n      backgroundColor: BUTTON_COLORS[index],\n    }}\n    onClick={() => onClickAction(isCorrect)}\n  >\n    {formula}\n  </Button>\n);\n\nexport default AnswerButton;\n","import { VFC } from 'react';\nimport Typography from '@material-ui/core/Typography';\n\ntype Props = {\n  calcResult: number;\n  abs: number;\n  isCorrect: boolean;\n};\n\nconst AnswerGuide: VFC<Props> = ({ calcResult, abs, isCorrect }) => (\n  <Typography align=\"center\">\n    {`${calcResult} → 2まで${abs} ${isCorrect ? '〇' : '×'}`}\n  </Typography>\n);\n\nexport default AnswerGuide;\n","import { VFC } from 'react';\nimport Box from '@material-ui/core/Box';\nimport AnswerButton from 'components/atoms/AnswerButton';\nimport AnswerGuide from 'components/atoms/AnswerGuide';\n\ntype Props = {\n  index: number;\n  calcResult: number;\n  formula: string;\n  abs: number;\n  isCorrect: boolean;\n  isAnswerDisplay: boolean;\n  handleAnswer: (isCorrect: boolean) => void;\n};\n\nconst AnswerBlock: VFC<Props> = ({\n  index,\n  calcResult,\n  formula,\n  abs,\n  isCorrect,\n  isAnswerDisplay,\n  handleAnswer,\n}) => (\n  <>\n    <AnswerButton\n      index={index}\n      formula={formula}\n      isCorrect={isCorrect}\n      onClickAction={handleAnswer}\n    />\n    <Box height={20}>\n      {isAnswerDisplay && (\n        <AnswerGuide calcResult={calcResult} abs={abs} isCorrect={isCorrect} />\n      )}\n    </Box>\n  </>\n);\n\nexport default AnswerBlock;\n","import { VFC } from 'react';\nimport Box from '@material-ui/core/Box';\nimport AnswerBlock from 'components/molecules/AnswerBlock';\nimport { Formula } from 'models/Formula';\n\ntype Props = {\n  formulaData: Formula[];\n  isAnswerDisplay: boolean;\n  handleAnswer: (isCorrect: boolean) => void;\n};\n\nconst SelectAnswerBlock: VFC<Props> = ({\n  formulaData,\n  isAnswerDisplay,\n  handleAnswer,\n}) => (\n  <Box>\n    {formulaData.map((data, index) => (\n      <Box p={2} key={data.formula}>\n        <AnswerBlock\n          index={index}\n          calcResult={data.calcResult}\n          formula={data.formula}\n          abs={data.abs}\n          isCorrect={data.isCorrect}\n          isAnswerDisplay={isAnswerDisplay}\n          handleAnswer={handleAnswer}\n        />\n      </Box>\n    ))}\n  </Box>\n);\n\nexport default SelectAnswerBlock;\n","import { VFC } from 'react';\nimport Button from '@material-ui/core/Button';\nimport green from '@material-ui/core/colors/green';\nimport { Diffculty, DiffcultyInfo } from 'models/Diffculty';\n\ntype Props = {\n  difficultyInfo: DiffcultyInfo;\n  onClickAction: (selectDiffculty: Diffculty) => void;\n};\n\nconst DifficultyButton: VFC<Props> = ({ difficultyInfo, onClickAction }) => (\n  <>\n    {difficultyInfo.EN_WORD === 'easy' && (\n      <Button\n        variant=\"contained\"\n        style={{ color: 'white', backgroundColor: green[600] }}\n        onClick={() => onClickAction(difficultyInfo.EN_WORD)}\n      >\n        {`${difficultyInfo.JP_WORD}（数値${difficultyInfo.FORMULA_PARTS_COUNT}つ）`}\n      </Button>\n    )}\n    {(difficultyInfo.EN_WORD === 'normal' ||\n      difficultyInfo.EN_WORD === 'hard') && (\n      <Button\n        variant=\"contained\"\n        color={difficultyInfo.EN_WORD === 'normal' ? 'primary' : 'secondary'}\n        onClick={() => onClickAction(difficultyInfo.EN_WORD)}\n      >\n        {`${difficultyInfo.JP_WORD}（数値${difficultyInfo.FORMULA_PARTS_COUNT}つ）`}\n      </Button>\n    )}\n  </>\n);\n\nexport default DifficultyButton;\n","import { VFC } from 'react';\nimport Box from '@material-ui/core/Box';\nimport Fade from '@material-ui/core/Fade';\nimport Modal from '@material-ui/core/Modal';\nimport DifficultyButton from 'components/atoms/DifficultyButton';\nimport { Diffculty } from 'models/Diffculty';\nimport { EASY, NORMAL, HARD } from 'constants/game';\n\ntype Props = {\n  open: boolean;\n  handleSelectDifficulty: (selectDiffculty: Diffculty) => void;\n};\n\nconst SelectDifficultyModal: VFC<Props> = ({\n  open,\n  handleSelectDifficulty,\n}) => (\n  <Modal\n    aria-labelledby=\"transition-modal-title\"\n    aria-describedby=\"transition-modal-description\"\n    open={open}\n    closeAfterTransition\n    style={{\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n    }}\n  >\n    <Fade in={open}>\n      <Box\n        p={4}\n        width={400}\n        bgcolor=\"background.paper\"\n        boxShadow={3}\n        display=\"flex\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n      >\n        <h2 id=\"transition-modal-title\">難易度選択</h2>\n        <p id=\"transition-modal-description\">\n          難易度に応じて、式が長くなります\n        </p>\n        <>\n          <Box p={2}>\n            <DifficultyButton\n              difficultyInfo={EASY}\n              onClickAction={handleSelectDifficulty}\n            />\n          </Box>\n          <Box p={2}>\n            <DifficultyButton\n              difficultyInfo={NORMAL}\n              onClickAction={handleSelectDifficulty}\n            />\n          </Box>\n          <Box p={2}>\n            <DifficultyButton\n              difficultyInfo={HARD}\n              onClickAction={handleSelectDifficulty}\n            />\n          </Box>\n        </>\n      </Box>\n    </Fade>\n  </Modal>\n);\n\nexport default SelectDifficultyModal;\n","import React, { VFC } from 'react';\nimport Button from '@material-ui/core/Button';\n\ntype Props = {\n  text: string;\n  onClickAction: React.MouseEventHandler<HTMLButtonElement>;\n};\n\nconst PrimaryButton: VFC<Props> = ({ text, onClickAction }) => (\n  <Button onClick={onClickAction} variant=\"contained\" color=\"secondary\">\n    {text}\n  </Button>\n);\n\nexport default PrimaryButton;\n","import { VFC } from 'react';\nimport Box from '@material-ui/core/Box';\nimport Fade from '@material-ui/core/Fade';\nimport Modal from '@material-ui/core/Modal';\nimport { TwitterShareButton, TwitterIcon } from 'react-share';\nimport SecondaryButton from 'components/atoms/SecondaryButton';\nimport { DiffcultyJP } from 'models/Diffculty';\n\ntype Props = {\n  open: boolean;\n  diffculty: DiffcultyJP;\n  correctAnswerCount: number;\n  handleRestart: VoidFunction;\n};\n\nconst CompleteModal: VFC<Props> = ({\n  open,\n  diffculty,\n  correctAnswerCount,\n  handleRestart,\n}) => (\n  <Modal\n    aria-labelledby=\"transition-modal-title\"\n    aria-describedby=\"transition-modal-description\"\n    open={open}\n    closeAfterTransition\n    style={{\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n    }}\n  >\n    <Fade in={open}>\n      <Box\n        p={4}\n        width={400}\n        bgcolor=\"background.paper\"\n        boxShadow={3}\n        display=\"flex\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n      >\n        <h2 id=\"transition-modal-title\">{`${diffculty} ${correctAnswerCount}回正解！`}</h2>\n        <p id=\"transition-modal-description\">お疲れさまでしたー</p>\n        <Box p={2}>\n          <TwitterShareButton\n            url=\"https://h-yoshikawa44.github.io/close-to-2\"\n            title={`${diffculty} - ${correctAnswerCount}回正解！`}\n            hashtags={['close_to_2', 'web1week']}\n          >\n            <TwitterIcon size={40} borderRadius={10} />\n          </TwitterShareButton>\n        </Box>\n        <Box p={2}>\n          <SecondaryButton text=\"再チャレンジ\" onClickAction={handleRestart} />\n        </Box>\n      </Box>\n    </Fade>\n  </Modal>\n);\n\nexport default CompleteModal;\n","import { VFC } from 'react';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport GameGuide from 'components/organisms/GameGuide';\nimport SelectAnswerBlock from 'components/organisms/SelectAnswerBlock';\nimport SelectDifficultyModal from 'components/organisms/SelectDifficultyModal';\nimport CompleteModal from 'components/organisms/CompleteModal';\nimport { Formula } from 'models/Formula';\nimport { Diffculty, DiffcultyInfo } from 'models/Diffculty';\n\ntype Props = {\n  countDownTime: number;\n  diffcultyInfo: DiffcultyInfo;\n  formulaData: Formula[];\n  correctAnswerCount: number;\n  isAnswerDisplay: boolean;\n  isLastAnswerCorrect: boolean;\n  difficultyModalOpen: boolean;\n  completeModalOpen: boolean;\n  handleAnswer: (isCorrect: boolean) => void;\n  handleSelectDifficulty: (diffculty: Diffculty) => void;\n  handleRestart: VoidFunction;\n};\n\nconst Game: VFC<Props> = ({\n  countDownTime,\n  diffcultyInfo,\n  formulaData,\n  correctAnswerCount,\n  isAnswerDisplay,\n  isLastAnswerCorrect,\n  difficultyModalOpen,\n  completeModalOpen,\n  handleAnswer,\n  handleSelectDifficulty,\n  handleRestart,\n}) => (\n  <>\n    <Container maxWidth=\"sm\">\n      <Box\n        p={4}\n        my={1}\n        boxShadow={3}\n        borderRadius={16}\n        display=\"flex\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n      >\n        <GameGuide\n          countDowntime={countDownTime}\n          correctAnswerCount={correctAnswerCount}\n          isAnswerDisplay={isAnswerDisplay}\n          isLastAnswerCorrect={isLastAnswerCorrect}\n        />\n        <SelectAnswerBlock\n          formulaData={formulaData}\n          isAnswerDisplay={isAnswerDisplay}\n          handleAnswer={handleAnswer}\n        />\n      </Box>\n    </Container>\n    <SelectDifficultyModal\n      open={difficultyModalOpen}\n      handleSelectDifficulty={handleSelectDifficulty}\n    />\n    <CompleteModal\n      open={completeModalOpen}\n      diffculty={diffcultyInfo.JP_WORD}\n      correctAnswerCount={correctAnswerCount}\n      handleRestart={handleRestart}\n    />\n  </>\n);\n\nexport default Game;\n","import { useState, useRef, useCallback } from 'react';\n\nconst useTimer = (\n  limit: number\n): {\n  countDownTime: number;\n  startTimer: VoidFunction;\n  stopTimer: VoidFunction;\n  resetTimer: VoidFunction;\n} => {\n  const [countDownTime, setCountDownTime] = useState<number>(limit);\n  const intervalId = useRef<NodeJS.Timeout>();\n\n  const countDown = useCallback(() => {\n    setCountDownTime((time) => time - 1);\n  }, []);\n\n  const startTimer = useCallback(() => {\n    intervalId.current = setInterval(countDown, 1000);\n  }, [countDown]);\n\n  const stopTimer = useCallback(() => {\n    if (intervalId.current) clearInterval(intervalId.current);\n  }, []);\n\n  const resetTimer = useCallback(() => {\n    setCountDownTime(limit);\n  }, [limit]);\n\n  return { countDownTime, startTimer, stopTimer, resetTimer };\n};\n\nexport default useTimer;\n","import { useState, useCallback, useEffect } from 'react';\nimport { Diffculty, DiffcultyInfo } from 'models/Diffculty';\nimport { Operator, Formula } from 'models/Formula';\nimport { BUTTON_COUNT, EASY, NORMAL, HARD } from 'constants/game';\n\nconst useQuiz = (): {\n  diffcultyInfo: DiffcultyInfo;\n  formulaData: Formula[];\n  correctAnswerCount: number;\n  isAnswerDisplay: boolean;\n  isLastAnswerCorrect: boolean;\n  selectDiffculty: (diffculty: Diffculty) => void;\n  resetAnswerCount: VoidFunction;\n  handleAnswer: (isCorrect: boolean) => void;\n} => {\n  const [diffcultyInfo, setDiffcultyInfo] = useState<DiffcultyInfo>(EASY);\n  const [formulaData, setFormulaData] = useState<Formula[]>([]);\n  const [answerCount, setAnswerCount] = useState<number>(0);\n  const [correctAnswerCount, setCorrectAnswerCount] = useState<number>(0);\n  const [isAnswerDisplay, setIsAnswerDisplay] = useState<boolean>(false);\n  const [isLastAnswerCorrect, setIsLastAnswerCorrect] =\n    useState<boolean>(false);\n\n  const getRandomInt = useCallback(\n    (min: number, max: number) =>\n      Math.floor(Math.random() * Math.floor(max + 1 - min) + min),\n    []\n  );\n\n  // 式のバーツ1つ分のデータ作成 & 取得\n  const createPartsOfFormula = useCallback(\n    () => ({\n      operator: getRandomInt(1, 100) % 2 === 0 ? '+' : ('-' as Operator),\n      num: getRandomInt(-99, 99),\n    }),\n    [getRandomInt]\n  );\n\n  // 式データ組み立て & 取得\n  const createFormulaDatum = useCallback(\n    (addPartsCount: number) => {\n      let num = getRandomInt(1, 100);\n      let formula = String(num);\n\n      for (let count = 1; count <= addPartsCount; count += 1) {\n        const parts = createPartsOfFormula();\n        if (parts.operator === '+') {\n          num += parts.num;\n          formula += parts.num < 0 ? ` + (${parts.num})` : ` + ${parts.num}`;\n        } else if (parts.operator === '-') {\n          num -= parts.num;\n          formula += parts.num < 0 ? ` - (${parts.num})` : ` - ${parts.num}`;\n        } else {\n          // eslint-disable-next-line no-console\n          console.log('invalid operator error');\n        }\n      }\n\n      const formulaDatum = {\n        calcResult: num,\n        formula,\n        abs: Math.abs(num - 2), // 2との絶対値\n        isCorrect: false,\n      } as Formula;\n      return formulaDatum;\n    },\n    [getRandomInt, createPartsOfFormula]\n  );\n\n  // 正答が複数存在するかチェック\n  const isDuplicationAbs = useCallback((formulaList: Formula[]) => {\n    const absList = formulaList.map((data) => data.abs);\n    return Array.from(new Set(absList)).length < BUTTON_COUNT;\n  }, []);\n\n  // 正答フラグを反映した式データを取得\n  const getSettingCorrectFormulaData = useCallback((formulaList: Formula[]) => {\n    const min = formulaList\n      .map((formula) => formula.abs)\n      .reduce((prev, current) => Math.min(prev, current));\n    return formulaList.map((formula) => {\n      const f = formula;\n      f.isCorrect = formula.abs === min;\n      return f;\n    });\n  }, []);\n\n  // 式データの初期化\n  const initialFormulaData = useCallback(() => {\n    const addPartsCount = diffcultyInfo.FORMULA_PARTS_COUNT - 1;\n    let formulaList;\n\n    // 正答が複数存在するパターンの場合は、再度初期化しなおし。\n    do {\n      formulaList = [];\n      for (let count = 1; count <= BUTTON_COUNT; count += 1) {\n        formulaList.push(createFormulaDatum(addPartsCount));\n      }\n    } while (isDuplicationAbs(formulaList));\n    setFormulaData(getSettingCorrectFormulaData(formulaList));\n  }, [\n    diffcultyInfo.FORMULA_PARTS_COUNT,\n    createFormulaDatum,\n    isDuplicationAbs,\n    getSettingCorrectFormulaData,\n  ]);\n\n  // 回答チェック\n  const checkAnswer = useCallback((isCorrect: boolean) => {\n    if (isCorrect) {\n      setCorrectAnswerCount((count) => count + 1);\n      setIsLastAnswerCorrect(true);\n    } else {\n      setIsLastAnswerCorrect(false);\n    }\n  }, []);\n\n  // 式データセットアップ\n  useEffect(() => {\n    initialFormulaData();\n  }, [diffcultyInfo, answerCount, initialFormulaData]);\n\n  // 難易度設定\n  const selectDiffculty = useCallback((diffculty: Diffculty) => {\n    switch (diffculty) {\n      case 'easy':\n        setDiffcultyInfo(EASY);\n        break;\n      case 'normal':\n        setDiffcultyInfo(NORMAL);\n        break;\n      case 'hard':\n        setDiffcultyInfo(HARD);\n        break;\n      default:\n        // eslint-disable-next-line no-console\n        console.log('invalid diffculty error');\n    }\n  }, []);\n\n  // 回答数リセット\n  const resetAnswerCount = useCallback(() => {\n    setAnswerCount(0);\n    setCorrectAnswerCount(0);\n  }, []);\n\n  // 回答\n  const handleAnswer = useCallback(\n    (isCorrect: boolean) => {\n      checkAnswer(isCorrect);\n      setIsAnswerDisplay(true);\n      setTimeout(() => {\n        setIsAnswerDisplay(false);\n        setAnswerCount((count) => count + 1);\n      }, 1200);\n    },\n    [checkAnswer]\n  );\n\n  return {\n    diffcultyInfo,\n    formulaData,\n    correctAnswerCount,\n    isAnswerDisplay,\n    isLastAnswerCorrect,\n    selectDiffculty,\n    resetAnswerCount,\n    handleAnswer,\n  };\n};\n\nexport default useQuiz;\n","import { VFC, useState, useEffect } from 'react';\nimport Game from 'components/pages/Game';\nimport { Diffculty } from 'models/Diffculty';\nimport { TIMER_LIMIT } from 'constants/game';\nimport useTimer from 'hooks/useTimer';\nimport useQuiz from 'hooks/useQuiz';\n\nconst EnhancedGame: VFC = () => {\n  const { countDownTime, startTimer, stopTimer, resetTimer } =\n    useTimer(TIMER_LIMIT);\n\n  const {\n    diffcultyInfo,\n    formulaData,\n    correctAnswerCount,\n    isAnswerDisplay,\n    isLastAnswerCorrect,\n    selectDiffculty,\n    resetAnswerCount,\n    handleAnswer,\n  } = useQuiz();\n\n  const [difficultyModalOpen, updateDifficultyModalOpen] =\n    useState<boolean>(true);\n  const [completeModalOpen, updateCompleteModalOpen] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (countDownTime === 0) {\n      stopTimer();\n      updateCompleteModalOpen(true);\n    }\n  }, [countDownTime, stopTimer]);\n\n  const handleSelectDifficulty = (diffculty: Diffculty) => {\n    selectDiffculty(diffculty);\n    updateDifficultyModalOpen(false);\n    startTimer();\n  };\n\n  const handleRestart = () => {\n    updateCompleteModalOpen(false);\n    resetTimer();\n    resetAnswerCount();\n    updateDifficultyModalOpen(true);\n  };\n\n  return (\n    <Game\n      countDownTime={countDownTime}\n      diffcultyInfo={diffcultyInfo}\n      formulaData={formulaData}\n      correctAnswerCount={correctAnswerCount}\n      isAnswerDisplay={isAnswerDisplay}\n      isLastAnswerCorrect={isLastAnswerCorrect}\n      difficultyModalOpen={difficultyModalOpen}\n      completeModalOpen={completeModalOpen}\n      handleAnswer={handleAnswer}\n      handleSelectDifficulty={handleSelectDifficulty}\n      handleRestart={handleRestart}\n    />\n  );\n};\n\nexport default EnhancedGame;\n","import { VFC } from 'react';\nimport Game from 'containers/pages/Game';\n\nconst App: VFC = () => <Game />;\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { render } from 'react-snapshot';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nrender(\n  <App />,\n  // eslint-disable-next-line no-undef\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}