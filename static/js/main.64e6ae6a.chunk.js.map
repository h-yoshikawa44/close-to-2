{"version":3,"sources":["constants/Operator.js","constants/Diffculty.js","molecules/CountDownTimer.js","molecules/CorrectAnswerCounter.js","atoms/GuideMessage.js","organisms/GameGuide.js","atoms/AnswerButton.js","atoms/AnswerGuide.js","molecules/AnswerBlock.js","organisms/SelectAnswerBlock.js","atoms/DifficultyButton.js","organisms/SelectDifficultyModal.js","atoms/SecondaryButton.js","organisms/CompleteModal.js","pages/Game.js","App.js","index.js"],"names":["PLUS","MINUS","EASY","NORMAL","HARD","countDownTimer","countDowntime","Box","m","fontSize","Timer","style","paddingRight","CorrectAnswerCounter","correctAnswerCount","PanoramaFishEye","GuideMessage","answerDisplay","lastAnswerCorrect","Typography","GameGuide","display","CountDownTimer","AnswerButton","index","formula","onClickAction","answerButtonColor","orange","red","green","indigo","Button","variant","width","process","REACT_APP_BUTTON_WIDTH","color","backgroundColor","onClick","AnswerGuide","calcResult","abs","correctAnswerIndex","align","AnswerBlock","handleAnswerAction","height","SelectAnswerBlock","buttonFormulaData","map","data","p","DifficultyButton","difficulty","Diffculty","REACT_APP_EASY_FORMULA_PARTS_COUNT","REACT_APP_NORMAL_FORMULA_PARTS_COUNT","REACT_APP_HARD_FORMULA_PARTS_COUNT","SelectDifficultyModal","open","handleSelectDifficultyAction","Modal","closeAfterTransition","justifyContent","alignItems","Fade","in","bgcolor","boxShadow","flexDirection","id","PrimaryButton","text","CompleteModal","diffculty","handleRestartAction","TwitterShareButton","url","title","hashtags","TwitterIcon","size","borderRadius","SecondaryButton","GameTemplate","useState","updateCountDownTime","timerId","setTimerId","setDiffculty","partsCount","setPartsCount","setButtonFormulaData","setCorrectAnswerIndex","answerCount","updateAnswerCount","updateCorrectAnswerCount","difficultyModalOpen","updateDifficultyModalOpen","updateAnswerDisplay","updateLastAnswerCorrect","completeModalOpen","updateCompleteModalOpen","getRandomInt","count","initNum","Math","floor","random","getFormulaData","addPartsCount","num","String","parts","operator","Operator","console","log","isDuplicationAbs","formulaDataList","absList","Array","from","Set","length","REACT_APP_BUTTON_COUNT","initialFormulaData","push","originalIndex","sort","a","b","initialCorrectAnswerIndex","useEffect","clearInterval","Container","maxWidth","my","checkAnswer","setTimeout","selectDiffculty","initialDiffcultySetting","setInterval","time","App","Game","render","document","getElementById"],"mappings":"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","file":"static/js/main.64e6ae6a.chunk.js","sourcesContent":["export const PLUS = 'PLUS';\n\nexport const MINUS = 'MINUS';\n","export const EASY = '初級';\n\nexport const NORMAL = '中級';\n\nexport const HARD = '上級';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Box } from '@material-ui/core';\nimport { Timer as TimerIcon } from '@material-ui/icons';\n\nconst countDownTimer = ({ countDowntime }) => (\n  <Box m={2} fontSize=\"1.8rem\">\n    <TimerIcon style={{ paddingRight: '5px' }} />\n    <>{countDowntime}</>\n  </Box>\n);\n\ncountDownTimer.propTypes = {\n  countDowntime: PropTypes.number.isRequired,\n};\n\nexport default countDownTimer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Box } from '@material-ui/core';\nimport { PanoramaFishEye as PanoramaFishEyeIcon } from '@material-ui/icons';\n\nconst CorrectAnswerCounter = ({ correctAnswerCount }) => (\n  <Box m={2} fontSize=\"1.8rem\">\n    <PanoramaFishEyeIcon />\n    <>{`：${correctAnswerCount}`}</>\n  </Box>\n);\n\nCorrectAnswerCounter.propTypes = {\n  correctAnswerCount: PropTypes.number.isRequired,\n};\n\nexport default CorrectAnswerCounter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Typography } from '@material-ui/core';\n\nconst GuideMessage = ({ answerDisplay, lastAnswerCorrect }) => (\n  <Typography>\n    {answerDisplay && lastAnswerCorrect && '正解！'}\n    {answerDisplay && !lastAnswerCorrect && '不正解...'}\n    {!answerDisplay && '一番「2」に近い式はどれかな？'}\n  </Typography>\n);\n\nGuideMessage.propTypes = {\n  answerDisplay: PropTypes.bool.isRequired,\n  lastAnswerCorrect: PropTypes.bool.isRequired,\n};\n\nexport default GuideMessage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Box } from '@material-ui/core';\nimport CountDownTimer from '../molecules/CountDownTimer';\nimport CorrectAnswerCounter from '../molecules/CorrectAnswerCounter';\nimport GuideMessage from '../atoms/GuideMessage';\n\nconst GameGuide = ({\n  countDowntime,\n  correctAnswerCount,\n  answerDisplay,\n  lastAnswerCorrect,\n}) => (\n  <>\n    <Box display=\"flex\">\n      <CountDownTimer countDowntime={countDowntime} />\n      <CorrectAnswerCounter correctAnswerCount={correctAnswerCount} />\n    </Box>\n    <GuideMessage\n      answerDisplay={answerDisplay}\n      lastAnswerCorrect={lastAnswerCorrect}\n    />\n  </>\n);\n\nGameGuide.propTypes = {\n  countDowntime: PropTypes.number.isRequired,\n  correctAnswerCount: PropTypes.number.isRequired,\n  answerDisplay: PropTypes.bool.isRequired,\n  lastAnswerCorrect: PropTypes.bool.isRequired,\n};\n\nexport default GameGuide;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '@material-ui/core';\nimport orange from '@material-ui/core/colors/orange';\nimport red from '@material-ui/core/colors/red';\nimport green from '@material-ui/core/colors/green';\nimport indigo from '@material-ui/core/colors/indigo';\n\nconst AnswerButton = ({ index, formula, onClickAction }) => {\n  const answerButtonColor = [orange[800], red[500], green[600], indigo[500]];\n  return (\n    <Button\n      variant=\"contained\"\n      style={{\n        width: process.env.REACT_APP_BUTTON_WIDTH,\n        color: 'white',\n        backgroundColor: answerButtonColor[index],\n      }}\n      onClick={() => onClickAction(index)}\n    >\n      {formula}\n    </Button>\n  );\n};\n\nAnswerButton.propTypes = {\n  index: PropTypes.number.isRequired,\n  formula: PropTypes.string.isRequired,\n  onClickAction: PropTypes.func.isRequired,\n};\n\nexport default AnswerButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Typography } from '@material-ui/core';\n\nconst AnswerGuide = ({ index, calcResult, abs, correctAnswerIndex }) => (\n  <Typography align=\"center\">\n    {`${calcResult} → 2まで${abs} ${index === correctAnswerIndex ? '〇' : '×'}`}\n  </Typography>\n);\n\nAnswerGuide.propTypes = {\n  index: PropTypes.number.isRequired,\n  calcResult: PropTypes.number.isRequired,\n  abs: PropTypes.number.isRequired,\n  correctAnswerIndex: PropTypes.number.isRequired,\n};\n\nexport default AnswerGuide;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Box } from '@material-ui/core';\nimport AnswerButton from '../atoms/AnswerButton';\nimport AnswerGuide from '../atoms/AnswerGuide';\n\nconst AnswerBlock = ({\n  index,\n  calcResult,\n  formula,\n  abs,\n  answerDisplay,\n  correctAnswerIndex,\n  handleAnswerAction,\n}) => (\n  <>\n    <AnswerButton\n      index={index}\n      formula={formula}\n      onClickAction={handleAnswerAction}\n    />\n    <Box height={20}>\n      {answerDisplay && (\n        <AnswerGuide\n          index={index}\n          calcResult={calcResult}\n          abs={abs}\n          correctAnswerIndex={correctAnswerIndex}\n        />\n      )}\n    </Box>\n  </>\n);\n\nAnswerBlock.propTypes = {\n  index: PropTypes.number.isRequired,\n  calcResult: PropTypes.number.isRequired,\n  formula: PropTypes.string.isRequired,\n  abs: PropTypes.number.isRequired,\n  answerDisplay: PropTypes.bool.isRequired,\n  correctAnswerIndex: PropTypes.number.isRequired,\n  handleAnswerAction: PropTypes.func.isRequired,\n};\n\nexport default AnswerBlock;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Box } from '@material-ui/core';\nimport AnswerBlock from '../molecules/AnswerBlock';\n\nconst SelectAnswerBlock = ({\n  buttonFormulaData,\n  answerDisplay,\n  correctAnswerIndex,\n  handleAnswerAction,\n}) =>\n  buttonFormulaData.map((data, index) => (\n    <Box p={2} key={data.formula}>\n      <AnswerBlock\n        index={index}\n        calcResult={data.calcResult}\n        formula={data.formula}\n        abs={data.abs}\n        answerDisplay={answerDisplay}\n        correctAnswerIndex={correctAnswerIndex}\n        handleAnswerAction={handleAnswerAction}\n      />\n    </Box>\n  ));\n\nSelectAnswerBlock.propTypes = {\n  buttonFormulaData: PropTypes.arrayOf(\n    PropTypes.exact({\n      calcResult: PropTypes.number.isRequired,\n      formula: PropTypes.string.isRequired,\n      abs: PropTypes.number.isRequired,\n    })\n  ),\n  answerDisplay: PropTypes.bool.isRequired,\n  correctAnswerIndex: PropTypes.number.isRequired,\n  handleAnswerAction: PropTypes.func.isRequired,\n};\n\nexport default SelectAnswerBlock;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '@material-ui/core';\nimport green from '@material-ui/core/colors/green';\nimport * as Diffculty from '../constants/Diffculty';\n\nconst DifficultyButton = ({ difficulty, onClickAction }) => (\n  <>\n    {difficulty === Diffculty.EASY && (\n      <Button\n        variant=\"contained\"\n        style={{ color: 'white', backgroundColor: green[600] }}\n        onClick={() => onClickAction(difficulty)}\n      >\n        {`${Diffculty.EASY}（数値${process.env.REACT_APP_EASY_FORMULA_PARTS_COUNT}つ）`}\n      </Button>\n    )}\n    {(difficulty === Diffculty.NORMAL || difficulty === Diffculty.HARD) && (\n      <Button\n        variant=\"contained\"\n        color={difficulty === Diffculty.NORMAL ? 'primary' : 'secondary'}\n        onClick={() => onClickAction(difficulty)}\n      >\n        {difficulty === Diffculty.NORMAL\n          ? `${Diffculty.NORMAL}（数値${process.env.REACT_APP_NORMAL_FORMULA_PARTS_COUNT}つ）`\n          : `${Diffculty.HARD}（数値${process.env.REACT_APP_HARD_FORMULA_PARTS_COUNT}つ）`}\n      </Button>\n    )}\n  </>\n);\n\nDifficultyButton.propTypes = {\n  difficulty: PropTypes.string.isRequired,\n  onClickAction: PropTypes.func.isRequired,\n};\n\nexport default DifficultyButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, Fade, Modal } from '@material-ui/core';\nimport * as Diffculty from '../constants/Diffculty';\nimport DifficultyButton from '../atoms/DifficultyButton';\n\nconst SelectDifficultyModal = ({ open, handleSelectDifficultyAction }) => (\n  <Modal\n    aria-labelledby=\"transition-modal-title\"\n    aria-describedby=\"transition-modal-description\"\n    open={open}\n    closeAfterTransition\n    style={{\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n    }}\n  >\n    <Fade in={open}>\n      <Box\n        p={4}\n        width={400}\n        bgcolor=\"background.paper\"\n        boxShadow={3}\n        display=\"flex\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n      >\n        <h2 id=\"transition-modal-title\">難易度選択</h2>\n        <p id=\"transition-modal-description\">\n          難易度に応じて、式が長くなります\n        </p>\n        <>\n          <Box p={2}>\n            <DifficultyButton\n              difficulty={Diffculty.EASY}\n              onClickAction={handleSelectDifficultyAction}\n            />\n          </Box>\n          <Box p={2}>\n            <DifficultyButton\n              difficulty={Diffculty.NORMAL}\n              onClickAction={handleSelectDifficultyAction}\n            />\n          </Box>\n          <Box p={2}>\n            <DifficultyButton\n              difficulty={Diffculty.HARD}\n              onClickAction={handleSelectDifficultyAction}\n            />\n          </Box>\n        </>\n      </Box>\n    </Fade>\n  </Modal>\n);\n\nSelectDifficultyModal.propTypes = {\n  open: PropTypes.bool.isRequired,\n  handleSelectDifficultyAction: PropTypes.func.isRequired,\n};\n\nexport default SelectDifficultyModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '@material-ui/core';\n\nconst PrimaryButton = ({ text, onClickAction }) => (\n  <Button onClick={onClickAction} variant=\"contained\" color=\"secondary\">\n    {text}\n  </Button>\n);\n\nPrimaryButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  onClickAction: PropTypes.func.isRequired,\n};\n\nexport default PrimaryButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, Fade, Modal } from '@material-ui/core';\nimport { TwitterShareButton, TwitterIcon } from 'react-share';\nimport SecondaryButton from '../atoms/SecondaryButton';\n\nconst CompleteModal = ({\n  open,\n  diffculty,\n  correctAnswerCount,\n  handleRestartAction,\n}) => (\n  <Modal\n    aria-labelledby=\"transition-modal-title\"\n    aria-describedby=\"transition-modal-description\"\n    open={open}\n    closeAfterTransition\n    style={{\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n    }}\n  >\n    <Fade in={open}>\n      <Box\n        p={4}\n        width={400}\n        bgcolor=\"background.paper\"\n        boxShadow={3}\n        display=\"flex\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n      >\n        <h2 id=\"transition-modal-title\">{`${diffculty} ${correctAnswerCount}回正解！`}</h2>\n        <p id=\"transition-modal-description\">お疲れさまでしたー</p>\n        <Box p={2}>\n          <TwitterShareButton\n            url=\"https://h-yoshikawa0724.github.io/close-to-2\"\n            title={`${diffculty} - ${correctAnswerCount}回正解！`}\n            hashtags={['close_to_2', 'web1week']}\n          >\n            <TwitterIcon size={40} borderRadius={10} />\n          </TwitterShareButton>\n        </Box>\n        <Box p={2}>\n          <SecondaryButton\n            text=\"再チャレンジ\"\n            onClickAction={handleRestartAction}\n          />\n        </Box>\n      </Box>\n    </Fade>\n  </Modal>\n);\n\nCompleteModal.propTypes = {\n  open: PropTypes.bool.isRequired,\n  diffculty: PropTypes.string.isRequired,\n  correctAnswerCount: PropTypes.number.isRequired,\n  handleRestartAction: PropTypes.func.isRequired,\n};\n\nexport default CompleteModal;\n","import React, { useState, useEffect } from 'react';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport * as Operator from '../constants/Operator';\nimport * as Diffculty from '../constants/Diffculty';\nimport GameGuide from '../organisms/GameGuide';\nimport SelectAnswerBlock from '../organisms/SelectAnswerBlock';\nimport SelectDifficultyModal from '../organisms/SelectDifficultyModal';\nimport CompleteModal from '../organisms/CompleteModal';\n\nconst GameTemplate = () => {\n  const [countDowntime, updateCountDownTime] = useState(30);\n  const [timerId, setTimerId] = useState(0);\n  const [diffculty, setDiffculty] = useState(Diffculty.EASY);\n  const [partsCount, setPartsCount] = useState(1);\n  const [buttonFormulaData, setButtonFormulaData] = useState([]);\n  const [correctAnswerIndex, setCorrectAnswerIndex] = useState(-1);\n  const [answerCount, updateAnswerCount] = useState(0);\n  const [correctAnswerCount, updateCorrectAnswerCount] = useState(0);\n  const [difficultyModalOpen, updateDifficultyModalOpen] = useState(true);\n  const [answerDisplay, updateAnswerDisplay] = useState(false);\n  const [lastAnswerCorrect, updateLastAnswerCorrect] = useState(false);\n  const [completeModalOpen, updateCompleteModalOpen] = useState(false);\n\n  const startTimer = () => {\n    setTimerId(\n      setInterval(() => {\n        updateCountDownTime((time) => time - 1);\n      }, 1000)\n    );\n  };\n  const stopTimer = () => {\n    clearInterval(timerId);\n  };\n\n  const getRandomInt = (count, initNum = 0) =>\n    Math.floor(Math.random() * Math.floor(count) + initNum);\n\n  const getPartsOfFormula = () => {\n    let operator;\n    if (getRandomInt(100, 1) % 2 === 0) {\n      operator = Operator.PLUS;\n    } else {\n      operator = Operator.MINUS;\n    }\n    const num = getRandomInt(199, -99);\n    const parts = {\n      operator,\n      num,\n    };\n    return parts;\n  };\n\n  const getFormulaData = (addPartsCount) => {\n    let num = getRandomInt(100);\n    let formula = String(num);\n\n    for (let count = 1; count <= addPartsCount; count += 1) {\n      const parts = getPartsOfFormula();\n      if (parts.operator === Operator.PLUS) {\n        num += parts.num;\n        formula += parts.num < 0 ? ` + (${parts.num})` : ` + ${parts.num}`;\n      } else if (parts.operator === Operator.MINUS) {\n        num -= parts.num;\n        formula += parts.num < 0 ? ` - (${parts.num})` : ` - ${parts.num}`;\n      } else {\n        // eslint-disable-next-line no-console\n        console.log('error');\n      }\n    }\n    const abs = Math.abs(num - 2);\n\n    const formulaData = {\n      calcResult: num,\n      formula,\n      abs,\n    };\n    return formulaData;\n  };\n\n  // 正答が複数存在しうるかチェック\n  const isDuplicationAbs = (formulaDataList) => {\n    const absList = formulaDataList.map((data) => data.abs);\n    return (\n      Array.from(new Set(absList)).length < process.env.REACT_APP_BUTTON_COUNT\n    );\n  };\n\n  const initialCorrectAnswerIndex = (formulaDataList) => {\n    const absList = formulaDataList.map((data, index) => ({\n      originalIndex: index,\n      abs: data.abs,\n    }));\n    absList.sort((a, b) => {\n      if (a.abs < b.abs) {\n        return -1;\n      }\n      return 1;\n    });\n    setCorrectAnswerIndex(absList[0].originalIndex);\n  };\n\n  const initialFormulaData = () => {\n    const addPartsCount = partsCount - 1;\n    let formulaDataList;\n\n    // 正答が複数存在するパターンの場合は、再度初期化しなおし。\n    do {\n      formulaDataList = [];\n      for (\n        let count = 1;\n        count <= process.env.REACT_APP_BUTTON_COUNT;\n        count += 1\n      ) {\n        formulaDataList.push(getFormulaData(addPartsCount));\n      }\n    } while (isDuplicationAbs(formulaDataList));\n    initialCorrectAnswerIndex(formulaDataList);\n    setButtonFormulaData(formulaDataList);\n  };\n\n  const initialDiffcultySetting = (selectDiffculty) => {\n    setDiffculty(selectDiffculty);\n    switch (selectDiffculty) {\n      case Diffculty.EASY:\n        setPartsCount(process.env.REACT_APP_EASY_FORMULA_PARTS_COUNT);\n        break;\n      case Diffculty.NORMAL:\n        setPartsCount(process.env.REACT_APP_NORMAL_FORMULA_PARTS_COUNT);\n        break;\n      case Diffculty.HARD:\n        setPartsCount(process.env.REACT_APP_HARD_FORMULA_PARTS_COUNT);\n        break;\n      default:\n        // eslint-disable-next-line no-console\n        console.log('error');\n    }\n  };\n\n  const checkAnswer = (index) => {\n    if (index === correctAnswerIndex) {\n      updateCorrectAnswerCount((count) => count + 1);\n      updateLastAnswerCorrect(true);\n    } else {\n      updateLastAnswerCorrect(false);\n    }\n  };\n\n  useEffect(() => {\n    initialFormulaData();\n    // TODO: react-hooks/exhaustive-depsルールを一時的に無効化\n    // eslint-disable-next-line\n  }, [partsCount, answerCount]);\n\n  useEffect(() => {\n    if (countDowntime === 0) {\n      stopTimer();\n      updateCompleteModalOpen(true);\n    }\n    // TODO: react-hooks/exhaustive-depsルールを一時的に無効化\n    // eslint-disable-next-line\n  }, [countDowntime]);\n\n  const handleSelectDifficultyAction = (selectDiffculty) => {\n    initialDiffcultySetting(selectDiffculty);\n    updateDifficultyModalOpen(false);\n    startTimer();\n  };\n\n  const handleAnswerAction = (index) => {\n    checkAnswer(index);\n    updateAnswerDisplay(true);\n    setTimeout(() => {\n      updateAnswerDisplay(false);\n      updateAnswerCount((count) => count + 1);\n    }, 1200);\n  };\n\n  const handleRestartAction = () => {\n    updateCompleteModalOpen(false);\n    updateCountDownTime(30);\n    updateCorrectAnswerCount(0);\n    updateDifficultyModalOpen(true);\n  };\n\n  return (\n    <>\n      <Container maxWidth=\"sm\">\n        <Box\n          p={4}\n          my={1}\n          boxShadow={3}\n          borderRadius={16}\n          display=\"flex\"\n          flexDirection=\"column\"\n          alignItems=\"center\"\n        >\n          <GameGuide\n            countDowntime={countDowntime}\n            correctAnswerCount={correctAnswerCount}\n            answerDisplay={answerDisplay}\n            lastAnswerCorrect={lastAnswerCorrect}\n          />\n          <SelectAnswerBlock\n            buttonFormulaData={buttonFormulaData}\n            answerDisplay={answerDisplay}\n            correctAnswerIndex={correctAnswerIndex}\n            handleAnswerAction={handleAnswerAction}\n          />\n        </Box>\n      </Container>\n      <SelectDifficultyModal\n        open={difficultyModalOpen}\n        handleSelectDifficultyAction={handleSelectDifficultyAction}\n      />\n      <CompleteModal\n        open={completeModalOpen}\n        diffculty={diffculty}\n        correctAnswerCount={correctAnswerCount}\n        handleRestartAction={handleRestartAction}\n      />\n    </>\n  );\n};\n\nexport default GameTemplate;\n","import React from 'react';\nimport Game from './pages/Game';\n\nconst App = () => <Game />;\n\nexport default App;\n","import React from 'react';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { render } from 'react-snapshot';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nrender(\n  <App />,\n  // eslint-disable-next-line no-undef\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}